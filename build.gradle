apply plugin: 'war'
apply plugin: 'eclipse'

repositories {
   mavenCentral()
    maven {
        url "http://download.eclipse.org/rt/eclipselink/maven.repo"
    }   
}

compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}

dependencies {
	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.9.5'
	providedCompile	'org.apache.tomcat:tomcat-servlet-api:7.0.37'
	compile 'asm:asm:3.3.1'
	compile 'org.eclipse.persistence:eclipselink:2.4.0'
	compile 'org.codehaus.jackson:jackson-xc:1.9.12'
	compile 'commons-lang:commons-lang:2.6'
	compile 'com.wordnik:swagger-jaxrs_2.9.1:1.2.1'
	compile 'org.codehaus.jackson:jackson-core-asl:1.9.12'
	compile 'org.codehaus.jackson:jackson-jaxrs:1.9.12'
	compile 'com.sun.jersey:jersey-bundle:1.17.1'
	compile 'org.xerial:sqlite-jdbc:3.7.2'
	compile 'log4j:log4j:1.2.17'
	compile 'org.mindrot:jbcrypt:0.3m'
}    

// ------------------
// The functional war
// ------------------

task createFunctionalWar(type: War) {
	classifier = 'Functional'
	from('src/test/resources/META-INF'){ 
		into('WEB-INF/classes/META-INF') 
		include 'persistence.xml' 
	} 
	rootSpec.exclude 'META-INF/persistence.xml'
}

task undeployFunctionalWar(type:Exec, dependsOn: createFunctionalWar) {
	commandLine=['wget', '--http-user=tomcat', '--http-password=tomcat', 'http://localhost:8080/manager/text/undeploy?path=/Natch-Functional', '-O', '-']
}

task deployFunctionalWar(type:Exec, dependsOn: undeployFunctionalWar) {
	commandLine=['wget', '--http-user=tomcat', '--http-password=tomcat', 'http://localhost:8080/manager/text/deploy?&path=/Natch-Functional&war=file:/home/user/workspace/Natch/build/libs/Natch-Functional.war', '-O', '-']
}

test.dependsOn deployFunctionalWar
