apply plugin: 'war' 
apply plugin: 'eclipse'

repositories {
   mavenCentral()
    maven {
        url "http://download.eclipse.org/rt/eclipselink/maven.repo"
    }   
}

sourceSets.main.java.srcDirs = ["src/main/java"]

compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}

dependencies {
	providedCompile	'org.apache.tomcat:tomcat-servlet-api:7.0.37'

	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.9.5'

	providedCompile 'org.eclipse.persistence:eclipselink:2.4.0'
	providedCompile 'postgresql:postgresql:9.1-901-1.jdbc4'
	compile 'org.slf4j:slf4j-simple:1.7.5'
	compile 'commons-lang:commons-lang:2.6'

	compile 'com.sun.jersey:jersey-bundle:1.17.1'
	compile 'org.codehaus.jackson:jackson-xc:1.9.12'
	compile 'org.codehaus.jackson:jackson-core-asl:1.9.12'
	compile 'org.codehaus.jackson:jackson-jaxrs:1.9.12'

	compile project(':Natch-io')

	compile 'log4j:log4j:1.2.17'

	compile 'org.mindrot:jbcrypt:0.3m'

	compile 'com.wordnik:swagger-jaxrs_2.9.1:1.2.1'
}    

task createProductionRestWar(type: War) {
	classifier = 'Production'
	manifest { attributes "ISPROD": "TRUE" }
}

// ------------------
// The rest war - used for testing
// ------------------

task createRestWar(type: War) {
	classifier = 'Functional'
	manifest { attributes "ISPROD": "FALSE" }
}

task undeployRestWar(type:Exec, dependsOn: createRestWar) {
        commandLine=['wget', '--http-user=tomcat', '--http-password=tomcat', 'http://localhost:8080/manager/text/undeploy?path=/'+project.name+'-Functional', '-O', '-']
}

task deployRestWar(type:Exec, dependsOn: undeployRestWar) {
        commandLine=['wget', '--http-user=tomcat', '--http-password=tomcat', 'http://localhost:8080/manager/text/deploy?&path=/'+project.name+'-Functional&war=file:'+file(".")+'/build/libs/'+project.name+'-Functional.war', '-O', '-']
}

test.dependsOn deployRestWar
