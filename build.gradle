apply plugin: 'war'
apply plugin: 'eclipse'

repositories {
   mavenCentral()
}

dependencies {
	testCompile 'junit:junit:4.11'
	testCompile 'org.mockito:mockito-all:1.9.5'
	testCompile 'com.sun.jersey:jersey-bundle:1.17.1'
	testCompile 'org.codehaus.jackson:jackson-core-asl:1.9.12'
	providedCompile	'org.apache.tomcat:tomcat-servlet-api:7.0.37'
	providedCompile 'com.sun.jersey:jersey-bundle:1.17.1'
	providedCompile 'org.eclipse.persistence:javax.persistence:2.0.0'
	compile 'log4j:log4j:1.2.17'
	compile 'org.mindrot:jbcrypt:0.3m'
}    

test {
	exclude 'org/denevell/natch/tests/functional/'
}

task integrationTests(type: Test) {
	include 'org/denevell/natch/tests/functional/**'
}

task createFunctionalWar(type: War) {
	classifier = 'Functional'
	from('src/test/resources/META-INF'){ 
		into('WEB-INF/classes/META-INF') 
		include 'persistence.xml' 
	} 
	rootSpec.exclude 'META-INF/persistence.xml'
}

task undeployFunctionalWar(type:Exec, dependsOn: createFunctionalWar) {
	commandLine=['wget', '--http-user=tomcat', '--http-password=tomcat', 'http://localhost:8080/manager/text/undeploy?path=/Natch-Functional', '-O', '-']
}

task deployFunctionalWar(type:Exec, dependsOn: undeployFunctionalWar) {
	commandLine=['wget', '--http-user=tomcat', '--http-password=tomcat', 'http://localhost:8080/manager/text/deploy?&path=/Natch-Functional&war=file:/home/user/workspace/Natch/build/libs/Natch-Functional.war', '-O', '-']
}

test.dependsOn deployFunctionalWar
