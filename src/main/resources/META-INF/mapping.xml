<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm    
http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
    version="2.0">

    <entity class="org.denevell.natch.entities.PushEntity"> 
       <table name="PushIds" />
	   <named-query name="listIds">
	       <query>select p from PushEntity p</query>
	   </named-query>       
	   <named-query name="findId">
	       <query>select p from PushEntity p where p.clientId = :id</query>
	   </named-query>       
       <attributes>
            <id name="clientId">
	           <column name="client_id" nullable="false" length="500" />
            </id>
       </attributes>
    </entity>    

    <entity class="org.denevell.natch.entities.PostEntity">
       <table name="PostEntity" />
	   <named-query name="findByModData">
	       <query>select p from PostEntity p order by p.modified desc</query>
	   </named-query>       
	   <named-query name="findByThreadId">
	       <query>select p from PostEntity p where p.threadId = :threadId order by p.created</query>
	   </named-query>       
	   <named-query name="findById">
	       <query>select p from PostEntity p where p.id = :id</query>
	   </named-query>       
       <attributes>
	       <id name="id">
	          <generated-value strategy="auto" />
	       </id>
	       <basic name="content">
	           <column name="content" nullable="false" />
	           <lob/>
	       </basic>	       
	       <basic name="username">
	          <column name="username" nullable="false" />
	       </basic>
		   <element-collection name="tags" fetch="eager">
	          <column name="tag_text" nullable="true" />
	          <collection-table name="post_tags">
	              <join-column name="post_id" />
	          </collection-table>	   
		   </element-collection>
	       <basic name="adminEdited">
	          <column name="adminedited" nullable="false" />
	       </basic>    		   
	       <basic name="subject">
	          <column name="subject" nullable="false" length="200" />
	       </basic>    		   
	       <basic name="threadId">
	          <column name="threadId" nullable="false" />
	       </basic>    		   
	       <basic name="created">
	          <column name="created" nullable="false" />
	       </basic>    		   
	       <basic name="modified">
	          <column name="modified" nullable="false" />
	       </basic>    		   
       </attributes>
    </entity>    
    
    <entity class="org.denevell.natch.entities.ThreadEntity">
       <table name="ThreadEntity" />
	   <named-query name="findThreads">
	       <query>select p from ThreadEntity p where p.rootPost is not null order by p.latestPost.modified desc</query>
	   </named-query>       
	   <named-query name="countThreads">
	       <query>select count(p) from ThreadEntity p where p.rootPost is not null</query>
	   </named-query>       
	   <named-query name="countThreadsWithTag">
	       <query>select count(p) from ThreadEntity p where p.rootPost is not null and :tag member of p.rootPost.tags</query>
	   </named-query>       
	   <named-query name="findThreadByTag">
	       <query>select p from ThreadEntity p where :tag member of p.rootPost.tags order by p.latestPost.modified desc</query>
	   </named-query>       
	   <named-query name="findThreadById">
	       <query>select p from ThreadEntity p where p.id = :id</query>
	   </named-query>       
	   <named-query name="findAuthorById">
	       <query>select p.rootPost.username from ThreadEntity p where p.id = :id</query>
	   </named-query>       
       <attributes>
	       <basic name="numPosts">
	           <column name="numPosts" nullable="false" />
	       </basic>       
	       <id name="id">
	           <column name="id" nullable="false" />
	       </id>       
	       <one-to-one name="latestPost" optional="false">
	       	  <join-column name="latestPost_reference" referenced-column-name="id" />
	       </one-to-one>
	       <one-to-one name="rootPost" optional="false">
	       	  <join-column name="rootPost_reference" referenced-column-name="id" />
	       </one-to-one>
	       <one-to-many name="posts" optional="false" orphan-removal="true">
	       		<cascade>
	       			<cascade-persist />
	       			<cascade-remove />
	       		</cascade>
	            <join-table name="thread_posts">
	                <join-column name="thread_id"/>
	                <inverse-join-column name="post_id"/>
	            </join-table>	   
	       </one-to-many>
       </attributes>
    </entity>        

</entity-mappings>
